#!/bin/bash
# Directory of symbolic links to keymaps
BOARDS=mine

TARGET=$1

if [[ -z "$HOST" ]]; then
    HOST="$(hostname)"
fi

function wait_for() {
    DESTINATION=$1
    printf "Waiting for ${DESTINATION}"
    until [ -d "${DESTINATION}" ]; do
        printf "."
        sleep 1
    done
    printf "\n"
}

function build_all {
    set -e
    for BOARD in $(ls -1 ${BOARDS}); do
        printf "Building ${BOARD}...\n"
        cd ./${BOARDS}/${BOARD}
        qmk compile
        cd ../..
    done
}

function build_command {
    echo "$COMMAND"
    $COMMAND
}

function flash_command {
    echo "$COPY_COMMAND"
    $COPY_COMMAND
}


case "${HOST}" in
    "ksanti")
        COPY_DESTINATION="/Volumes/Users/seth/Desktop/share/qmk-firmware"
        ;;
    "pc")
        COPY_DESTINATION="/mnt/c/Users/seth/Desktop/share/qmk-firmware/"
        ;;
    "191-grosvenor-imac.local")
        COPY_DESTINATION="~/Desktop/"
        ;;
    "lapdesk.local")
        ;;
esac

case "${TARGET}" in
    "bad_wings")
        COMMAND="qmk compile -kb hazel/bad_wings -km SethMilliken"
        build_command
        COPY_DESTINATION="/Volumes/RPI-RP2"
        COPY_COMMAND="cp hazel_bad_wings_SethMilliken.uf2 ${COPY_DESTINATION}"
        wait_for $COPY_DESTINATION
        flash_command
        ;;
    "planck")
        COMMAND="qmk compile -kb planck/rev6_drop -km SethMilliken"
        build_command
        COPY_COMMAND="qmk flash -kb planck/rev6_drop"
        flash_command
        ;;
    "aurora_corne")
        COMMAND="qmk compile -kb splitkb/aurora/corne -km SethMilliken"
        build_command
        COPY_DESTINATION="/Volumes/RPI-RP2"
        COPY_COMMAND="cp splitkb_aurora_corne_rev1_SethMilliken_promicro_rp2040.uf2 ${COPY_DESTINATION}"
        wait_for $COPY_DESTINATION
        flash_command
        ;;
    *)
        echo 'Provide specific target to flash.'
        ;;
esac
